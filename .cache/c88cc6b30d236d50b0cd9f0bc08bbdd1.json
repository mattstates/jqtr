{"id":"node_modules/entities/lib/decode_codepoint.js","dependencies":[{"name":"/Users/mattstates/Documents/JQTR/node_modules/entities/package.json","includedInParent":true,"mtime":1557281196156},{"name":"/Users/mattstates/Documents/JQTR/package.json","includedInParent":true,"mtime":1559866723838},{"name":"/Users/mattstates/Documents/JQTR/.babelrc","includedInParent":true,"mtime":1557269879909},{"name":"../maps/decode.json","loc":{"line":1,"column":24},"parent":"/Users/mattstates/Documents/JQTR/node_modules/entities/lib/decode_codepoint.js","resolved":"/Users/mattstates/Documents/JQTR/node_modules/entities/maps/decode.json"}],"generated":{"js":"var decodeMap = require(\"../maps/decode.json\");\n\nmodule.exports = decodeCodePoint;\n\n// modified version of https://github.com/mathiasbynens/he/blob/master/src/he.js#L94-L119\nfunction decodeCodePoint(codePoint){\n\n\tif((codePoint >= 0xD800 && codePoint <= 0xDFFF) || codePoint > 0x10FFFF){\n\t\treturn \"\\uFFFD\";\n\t}\n\n\tif(codePoint in decodeMap){\n\t\tcodePoint = decodeMap[codePoint];\n\t}\n\n\tvar output = \"\";\n\n\tif(codePoint > 0xFFFF){\n\t\tcodePoint -= 0x10000;\n\t\toutput += String.fromCharCode(codePoint >>> 10 & 0x3FF | 0xD800);\n\t\tcodePoint = 0xDC00 | codePoint & 0x3FF;\n\t}\n\n\toutput += String.fromCharCode(codePoint);\n\treturn output;\n}\n","map":{"mappings":[{"source":"node_modules/entities/lib/decode_codepoint.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/entities/lib/decode_codepoint.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/entities/lib/decode_codepoint.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/entities/lib/decode_codepoint.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/entities/lib/decode_codepoint.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/entities/lib/decode_codepoint.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/entities/lib/decode_codepoint.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/entities/lib/decode_codepoint.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/entities/lib/decode_codepoint.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/entities/lib/decode_codepoint.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/entities/lib/decode_codepoint.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/entities/lib/decode_codepoint.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/entities/lib/decode_codepoint.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/entities/lib/decode_codepoint.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/entities/lib/decode_codepoint.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/entities/lib/decode_codepoint.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/entities/lib/decode_codepoint.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/entities/lib/decode_codepoint.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/entities/lib/decode_codepoint.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/entities/lib/decode_codepoint.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/entities/lib/decode_codepoint.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/entities/lib/decode_codepoint.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/entities/lib/decode_codepoint.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/entities/lib/decode_codepoint.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/entities/lib/decode_codepoint.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/entities/lib/decode_codepoint.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/entities/lib/decode_codepoint.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}}],"sources":{"node_modules/entities/lib/decode_codepoint.js":"var decodeMap = require(\"../maps/decode.json\");\n\nmodule.exports = decodeCodePoint;\n\n// modified version of https://github.com/mathiasbynens/he/blob/master/src/he.js#L94-L119\nfunction decodeCodePoint(codePoint){\n\n\tif((codePoint >= 0xD800 && codePoint <= 0xDFFF) || codePoint > 0x10FFFF){\n\t\treturn \"\\uFFFD\";\n\t}\n\n\tif(codePoint in decodeMap){\n\t\tcodePoint = decodeMap[codePoint];\n\t}\n\n\tvar output = \"\";\n\n\tif(codePoint > 0xFFFF){\n\t\tcodePoint -= 0x10000;\n\t\toutput += String.fromCharCode(codePoint >>> 10 & 0x3FF | 0xD800);\n\t\tcodePoint = 0xDC00 | codePoint & 0x3FF;\n\t}\n\n\toutput += String.fromCharCode(codePoint);\n\treturn output;\n}\n"},"lineCount":27}},"hash":"a9e07c042177b299c7fa9a5510a3347e","cacheData":{"env":{}}}