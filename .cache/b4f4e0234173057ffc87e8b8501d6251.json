{"id":"node_modules/date-fns/each_day/index.js","dependencies":[{"name":"/Users/mattstates/Documents/JQTR/node_modules/date-fns/each_day/package.json","includedInParent":true,"mtime":1544450746000},{"name":"/Users/mattstates/Documents/JQTR/package.json","includedInParent":true,"mtime":1559866723838},{"name":"/Users/mattstates/Documents/JQTR/.babelrc","includedInParent":true,"mtime":1557269879909},{"name":"../parse/index.js","loc":{"line":1,"column":20},"parent":"/Users/mattstates/Documents/JQTR/node_modules/date-fns/each_day/index.js","resolved":"/Users/mattstates/Documents/JQTR/node_modules/date-fns/parse/index.js"}],"generated":{"js":"var parse = require('../parse/index.js')\n\n/**\n * @category Day Helpers\n * @summary Return the array of dates within the specified range.\n *\n * @description\n * Return the array of dates within the specified range.\n *\n * @param {Date|String|Number} startDate - the first date\n * @param {Date|String|Number} endDate - the last date\n * @param {Number} [step=1] - the step between each day\n * @returns {Date[]} the array with starts of days from the day of startDate to the day of endDate\n * @throws {Error} startDate cannot be after endDate\n *\n * @example\n * // Each day between 6 October 2014 and 10 October 2014:\n * var result = eachDay(\n *   new Date(2014, 9, 6),\n *   new Date(2014, 9, 10)\n * )\n * //=> [\n * //   Mon Oct 06 2014 00:00:00,\n * //   Tue Oct 07 2014 00:00:00,\n * //   Wed Oct 08 2014 00:00:00,\n * //   Thu Oct 09 2014 00:00:00,\n * //   Fri Oct 10 2014 00:00:00\n * // ]\n */\nfunction eachDay (dirtyStartDate, dirtyEndDate, dirtyStep) {\n  var startDate = parse(dirtyStartDate)\n  var endDate = parse(dirtyEndDate)\n  var step = dirtyStep !== undefined ? dirtyStep : 1\n\n  var endTime = endDate.getTime()\n\n  if (startDate.getTime() > endTime) {\n    throw new Error('The first date cannot be after the second date')\n  }\n\n  var dates = []\n\n  var currentDate = startDate\n  currentDate.setHours(0, 0, 0, 0)\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push(parse(currentDate))\n    currentDate.setDate(currentDate.getDate() + step)\n  }\n\n  return dates\n}\n\nmodule.exports = eachDay\n","map":{"mappings":[{"source":"node_modules/date-fns/each_day/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/date-fns/each_day/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}}],"sources":{"node_modules/date-fns/each_day/index.js":"var parse = require('../parse/index.js')\n\n/**\n * @category Day Helpers\n * @summary Return the array of dates within the specified range.\n *\n * @description\n * Return the array of dates within the specified range.\n *\n * @param {Date|String|Number} startDate - the first date\n * @param {Date|String|Number} endDate - the last date\n * @param {Number} [step=1] - the step between each day\n * @returns {Date[]} the array with starts of days from the day of startDate to the day of endDate\n * @throws {Error} startDate cannot be after endDate\n *\n * @example\n * // Each day between 6 October 2014 and 10 October 2014:\n * var result = eachDay(\n *   new Date(2014, 9, 6),\n *   new Date(2014, 9, 10)\n * )\n * //=> [\n * //   Mon Oct 06 2014 00:00:00,\n * //   Tue Oct 07 2014 00:00:00,\n * //   Wed Oct 08 2014 00:00:00,\n * //   Thu Oct 09 2014 00:00:00,\n * //   Fri Oct 10 2014 00:00:00\n * // ]\n */\nfunction eachDay (dirtyStartDate, dirtyEndDate, dirtyStep) {\n  var startDate = parse(dirtyStartDate)\n  var endDate = parse(dirtyEndDate)\n  var step = dirtyStep !== undefined ? dirtyStep : 1\n\n  var endTime = endDate.getTime()\n\n  if (startDate.getTime() > endTime) {\n    throw new Error('The first date cannot be after the second date')\n  }\n\n  var dates = []\n\n  var currentDate = startDate\n  currentDate.setHours(0, 0, 0, 0)\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push(parse(currentDate))\n    currentDate.setDate(currentDate.getDate() + step)\n  }\n\n  return dates\n}\n\nmodule.exports = eachDay\n"},"lineCount":55}},"hash":"c43591601157947b8f1beaf3f623a3c7","cacheData":{"env":{}}}