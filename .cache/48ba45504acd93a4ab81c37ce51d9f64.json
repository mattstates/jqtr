{"id":"node_modules/sanitize-html/dist/index.js","dependencies":[{"name":"/Users/mattstates/Documents/JQTR/node_modules/sanitize-html/package.json","includedInParent":true,"mtime":1557281195711},{"name":"/Users/mattstates/Documents/JQTR/package.json","includedInParent":true,"mtime":1559866723838},{"name":"/Users/mattstates/Documents/JQTR/.babelrc","includedInParent":true,"mtime":1557269879909},{"name":"/Users/mattstates/Documents/JQTR/node_modules/sanitize-html/.babelrc","includedInParent":true,"mtime":499162500000},{"name":"htmlparser2","loc":{"line":3,"column":25},"parent":"/Users/mattstates/Documents/JQTR/node_modules/sanitize-html/dist/index.js","resolved":"/Users/mattstates/Documents/JQTR/node_modules/htmlparser2/lib/index.js"},{"name":"xtend","loc":{"line":4,"column":21},"parent":"/Users/mattstates/Documents/JQTR/node_modules/sanitize-html/dist/index.js","resolved":"/Users/mattstates/Documents/JQTR/node_modules/xtend/immutable.js"},{"name":"lodash.escaperegexp","loc":{"line":5,"column":26},"parent":"/Users/mattstates/Documents/JQTR/node_modules/sanitize-html/dist/index.js","resolved":"/Users/mattstates/Documents/JQTR/node_modules/lodash.escaperegexp/index.js"},{"name":"lodash.clonedeep","loc":{"line":6,"column":24},"parent":"/Users/mattstates/Documents/JQTR/node_modules/sanitize-html/dist/index.js","resolved":"/Users/mattstates/Documents/JQTR/node_modules/lodash.clonedeep/index.js"},{"name":"lodash.mergewith","loc":{"line":7,"column":24},"parent":"/Users/mattstates/Documents/JQTR/node_modules/sanitize-html/dist/index.js","resolved":"/Users/mattstates/Documents/JQTR/node_modules/lodash.mergewith/index.js"},{"name":"lodash.isstring","loc":{"line":8,"column":23},"parent":"/Users/mattstates/Documents/JQTR/node_modules/sanitize-html/dist/index.js","resolved":"/Users/mattstates/Documents/JQTR/node_modules/lodash.isstring/index.js"},{"name":"lodash.isplainobject","loc":{"line":9,"column":28},"parent":"/Users/mattstates/Documents/JQTR/node_modules/sanitize-html/dist/index.js","resolved":"/Users/mattstates/Documents/JQTR/node_modules/lodash.isplainobject/index.js"},{"name":"srcset","loc":{"line":10,"column":21},"parent":"/Users/mattstates/Documents/JQTR/node_modules/sanitize-html/dist/index.js","resolved":"/Users/mattstates/Documents/JQTR/node_modules/srcset/index.js"},{"name":"postcss","loc":{"line":11,"column":22},"parent":"/Users/mattstates/Documents/JQTR/node_modules/sanitize-html/dist/index.js","resolved":"/Users/mattstates/Documents/JQTR/node_modules/postcss/lib/postcss.js"},{"name":"url","loc":{"line":12,"column":18},"parent":"/Users/mattstates/Documents/JQTR/node_modules/sanitize-html/dist/index.js","resolved":"/Users/mattstates/Documents/JQTR/node_modules/url/url.js"}],"generated":{"js":"'use strict';\n\nvar htmlparser = require('htmlparser2');\nvar extend = require('xtend');\nvar quoteRegexp = require('lodash.escaperegexp');\nvar cloneDeep = require('lodash.clonedeep');\nvar mergeWith = require('lodash.mergewith');\nvar isString = require('lodash.isstring');\nvar isPlainObject = require('lodash.isplainobject');\nvar srcset = require('srcset');\nvar postcss = require('postcss');\nvar url = require('url');\n\nfunction each(obj, cb) {\n  if (obj) Object.keys(obj).forEach(function (key) {\n    cb(obj[key], key);\n  });\n}\n\n// Avoid false positives with .__proto__, .hasOwnProperty, etc.\nfunction has(obj, key) {\n  return {}.hasOwnProperty.call(obj, key);\n}\n\n// Returns those elements of `a` for which `cb(a)` returns truthy\nfunction filter(a, cb) {\n  var n = [];\n  each(a, function (v) {\n    if (cb(v)) {\n      n.push(v);\n    }\n  });\n  return n;\n}\n\nmodule.exports = sanitizeHtml;\n\n// A valid attribute name.\n// We use a tolerant definition based on the set of strings defined by\n// html.spec.whatwg.org/multipage/parsing.html#before-attribute-name-state\n// and html.spec.whatwg.org/multipage/parsing.html#attribute-name-state .\n// The characters accepted are ones which can be appended to the attribute\n// name buffer without triggering a parse error:\n//   * unexpected-equals-sign-before-attribute-name\n//   * unexpected-null-character\n//   * unexpected-character-in-attribute-name\n// We exclude the empty string because it's impossible to get to the after\n// attribute name state with an empty attribute name buffer.\nvar VALID_HTML_ATTRIBUTE_NAME = /^[^\\0\\t\\n\\f\\r /<=>]+$/;\n\n// Ignore the _recursing flag; it's there for recursive\n// invocation as a guard against this exploit:\n// https://github.com/fb55/htmlparser2/issues/105\n\nfunction sanitizeHtml(html, options, _recursing) {\n  var result = '';\n\n  function Frame(tag, attribs) {\n    var that = this;\n    this.tag = tag;\n    this.attribs = attribs || {};\n    this.tagPosition = result.length;\n    this.text = ''; // Node inner text\n\n    this.updateParentNodeText = function () {\n      if (stack.length) {\n        var parentFrame = stack[stack.length - 1];\n        parentFrame.text += that.text;\n      }\n    };\n  }\n\n  if (!options) {\n    options = sanitizeHtml.defaults;\n    options.parser = htmlParserDefaults;\n  } else {\n    options = extend(sanitizeHtml.defaults, options);\n    if (options.parser) {\n      options.parser = extend(htmlParserDefaults, options.parser);\n    } else {\n      options.parser = htmlParserDefaults;\n    }\n  }\n\n  // Tags that contain something other than HTML, or where discarding\n  // the text when the tag is disallowed makes sense for other reasons.\n  // If we are not allowing these tags, we should drop their content too.\n  // For other tags you would drop the tag but keep its content.\n  var nonTextTagsArray = options.nonTextTags || ['script', 'style', 'textarea'];\n  var allowedAttributesMap;\n  var allowedAttributesGlobMap;\n  if (options.allowedAttributes) {\n    allowedAttributesMap = {};\n    allowedAttributesGlobMap = {};\n    each(options.allowedAttributes, function (attributes, tag) {\n      allowedAttributesMap[tag] = [];\n      var globRegex = [];\n      attributes.forEach(function (obj) {\n        if (isString(obj) && obj.indexOf('*') >= 0) {\n          globRegex.push(quoteRegexp(obj).replace(/\\\\\\*/g, '.*'));\n        } else {\n          allowedAttributesMap[tag].push(obj);\n        }\n      });\n      allowedAttributesGlobMap[tag] = new RegExp('^(' + globRegex.join('|') + ')$');\n    });\n  }\n  var allowedClassesMap = {};\n  each(options.allowedClasses, function (classes, tag) {\n    // Implicitly allows the class attribute\n    if (allowedAttributesMap) {\n      if (!has(allowedAttributesMap, tag)) {\n        allowedAttributesMap[tag] = [];\n      }\n      allowedAttributesMap[tag].push('class');\n    }\n\n    allowedClassesMap[tag] = classes;\n  });\n\n  var transformTagsMap = {};\n  var transformTagsAll;\n  each(options.transformTags, function (transform, tag) {\n    var transFun;\n    if (typeof transform === 'function') {\n      transFun = transform;\n    } else if (typeof transform === \"string\") {\n      transFun = sanitizeHtml.simpleTransform(transform);\n    }\n    if (tag === '*') {\n      transformTagsAll = transFun;\n    } else {\n      transformTagsMap[tag] = transFun;\n    }\n  });\n\n  var depth = 0;\n  var stack = [];\n  var skipMap = {};\n  var transformMap = {};\n  var skipText = false;\n  var skipTextDepth = 0;\n\n  var parser = new htmlparser.Parser({\n    onopentag: function onopentag(name, attribs) {\n      if (skipText) {\n        skipTextDepth++;\n        return;\n      }\n      var frame = new Frame(name, attribs);\n      stack.push(frame);\n\n      var skip = false;\n      var hasText = frame.text ? true : false;\n      var transformedTag;\n      if (has(transformTagsMap, name)) {\n        transformedTag = transformTagsMap[name](name, attribs);\n\n        frame.attribs = attribs = transformedTag.attribs;\n\n        if (transformedTag.text !== undefined) {\n          frame.innerText = transformedTag.text;\n        }\n\n        if (name !== transformedTag.tagName) {\n          frame.name = name = transformedTag.tagName;\n          transformMap[depth] = transformedTag.tagName;\n        }\n      }\n      if (transformTagsAll) {\n        transformedTag = transformTagsAll(name, attribs);\n\n        frame.attribs = attribs = transformedTag.attribs;\n        if (name !== transformedTag.tagName) {\n          frame.name = name = transformedTag.tagName;\n          transformMap[depth] = transformedTag.tagName;\n        }\n      }\n\n      if (options.allowedTags && options.allowedTags.indexOf(name) === -1) {\n        skip = true;\n        if (nonTextTagsArray.indexOf(name) !== -1) {\n          skipText = true;\n          skipTextDepth = 1;\n        }\n        skipMap[depth] = true;\n      }\n      depth++;\n      if (skip) {\n        // We want the contents but not this tag\n        return;\n      }\n      result += '<' + name;\n      if (!allowedAttributesMap || has(allowedAttributesMap, name) || allowedAttributesMap['*']) {\n        each(attribs, function (value, a) {\n          if (!VALID_HTML_ATTRIBUTE_NAME.test(a)) {\n            // This prevents part of an attribute name in the output from being\n            // interpreted as the end of an attribute, or end of a tag.\n            delete frame.attribs[a];\n            return;\n          }\n          var parsed;\n          // check allowedAttributesMap for the element and attribute and modify the value\n          // as necessary if there are specific values defined.\n          var passedAllowedAttributesMapCheck = false;\n          if (!allowedAttributesMap || has(allowedAttributesMap, name) && allowedAttributesMap[name].indexOf(a) !== -1 || allowedAttributesMap['*'] && allowedAttributesMap['*'].indexOf(a) !== -1 || has(allowedAttributesGlobMap, name) && allowedAttributesGlobMap[name].test(a) || allowedAttributesGlobMap['*'] && allowedAttributesGlobMap['*'].test(a)) {\n            passedAllowedAttributesMapCheck = true;\n          } else if (allowedAttributesMap && allowedAttributesMap[name]) {\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n              for (var _iterator = allowedAttributesMap[name][Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var o = _step.value;\n\n                if (isPlainObject(o) && o.name && o.name === a) {\n                  passedAllowedAttributesMapCheck = true;\n                  var newValue = '';\n                  if (o.multiple === true) {\n                    // verify the values that are allowed\n                    var splitStrArray = value.split(' ');\n                    var _iteratorNormalCompletion2 = true;\n                    var _didIteratorError2 = false;\n                    var _iteratorError2 = undefined;\n\n                    try {\n                      for (var _iterator2 = splitStrArray[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                        var s = _step2.value;\n\n                        if (o.values.indexOf(s) !== -1) {\n                          if (newValue === '') {\n                            newValue = s;\n                          } else {\n                            newValue += ' ' + s;\n                          }\n                        }\n                      }\n                    } catch (err) {\n                      _didIteratorError2 = true;\n                      _iteratorError2 = err;\n                    } finally {\n                      try {\n                        if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                          _iterator2.return();\n                        }\n                      } finally {\n                        if (_didIteratorError2) {\n                          throw _iteratorError2;\n                        }\n                      }\n                    }\n                  } else if (o.values.indexOf(value) >= 0) {\n                    // verified an allowed value matches the entire attribute value\n                    newValue = value;\n                  }\n                  value = newValue;\n                }\n              }\n            } catch (err) {\n              _didIteratorError = true;\n              _iteratorError = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                  _iterator.return();\n                }\n              } finally {\n                if (_didIteratorError) {\n                  throw _iteratorError;\n                }\n              }\n            }\n          }\n          if (passedAllowedAttributesMapCheck) {\n            if (options.allowedSchemesAppliedToAttributes.indexOf(a) !== -1) {\n              if (naughtyHref(name, value)) {\n                delete frame.attribs[a];\n                return;\n              }\n            }\n            if (name === 'iframe' && a === 'src') {\n              try {\n                // naughtyHref is in charge of whether protocol relative URLs\n                // are cool. We should just accept them\n                parsed = url.parse(value, false, true);\n                if (options.allowedIframeHostnames) {\n                  var whitelistedHostnames = options.allowedIframeHostnames.find(function (hostname) {\n                    return hostname === parsed.hostname;\n                  });\n                  if (!whitelistedHostnames) {\n                    delete frame.attribs[a];\n                    return;\n                  }\n                }\n              } catch (e) {\n                // Unparseable iframe src\n                delete frame.attribs[a];\n                return;\n              }\n            }\n            if (a === 'srcset') {\n              try {\n                parsed = srcset.parse(value);\n                each(parsed, function (value) {\n                  if (naughtyHref('srcset', value.url)) {\n                    value.evil = true;\n                  }\n                });\n                parsed = filter(parsed, function (v) {\n                  return !v.evil;\n                });\n                if (!parsed.length) {\n                  delete frame.attribs[a];\n                  return;\n                } else {\n                  value = srcset.stringify(filter(parsed, function (v) {\n                    return !v.evil;\n                  }));\n                  frame.attribs[a] = value;\n                }\n              } catch (e) {\n                // Unparseable srcset\n                delete frame.attribs[a];\n                return;\n              }\n            }\n            if (a === 'class') {\n              value = filterClasses(value, allowedClassesMap[name]);\n              if (!value.length) {\n                delete frame.attribs[a];\n                return;\n              }\n            }\n            if (a === 'style') {\n              try {\n                var abstractSyntaxTree = postcss.parse(name + \" {\" + value + \"}\");\n                var filteredAST = filterCss(abstractSyntaxTree, options.allowedStyles);\n\n                value = stringifyStyleAttributes(filteredAST);\n\n                if (value.length === 0) {\n                  delete frame.attribs[a];\n                  return;\n                }\n              } catch (e) {\n                delete frame.attribs[a];\n                return;\n              }\n            }\n            result += ' ' + a;\n            if (value.length) {\n              result += '=\"' + escapeHtml(value) + '\"';\n            }\n          } else {\n            delete frame.attribs[a];\n          }\n        });\n      }\n      if (options.selfClosing.indexOf(name) !== -1) {\n        result += \" />\";\n      } else {\n        result += \">\";\n        if (frame.innerText && !hasText && !options.textFilter) {\n          result += frame.innerText;\n        }\n      }\n    },\n    ontext: function ontext(text) {\n      if (skipText) {\n        return;\n      }\n      var lastFrame = stack[stack.length - 1];\n      var tag;\n\n      if (lastFrame) {\n        tag = lastFrame.tag;\n        // If inner text was set by transform function then let's use it\n        text = lastFrame.innerText !== undefined ? lastFrame.innerText : text;\n      }\n\n      if (tag === 'script' || tag === 'style') {\n        // htmlparser2 gives us these as-is. Escaping them ruins the content. Allowing\n        // script tags is, by definition, game over for XSS protection, so if that's\n        // your concern, don't allow them. The same is essentially true for style tags\n        // which have their own collection of XSS vectors.\n        result += text;\n      } else {\n        var escaped = escapeHtml(text);\n        if (options.textFilter) {\n          result += options.textFilter(escaped);\n        } else {\n          result += escaped;\n        }\n      }\n      if (stack.length) {\n        var frame = stack[stack.length - 1];\n        frame.text += text;\n      }\n    },\n    onclosetag: function onclosetag(name) {\n\n      if (skipText) {\n        skipTextDepth--;\n        if (!skipTextDepth) {\n          skipText = false;\n        } else {\n          return;\n        }\n      }\n\n      var frame = stack.pop();\n      if (!frame) {\n        // Do not crash on bad markup\n        return;\n      }\n      skipText = false;\n      depth--;\n      if (skipMap[depth]) {\n        delete skipMap[depth];\n        frame.updateParentNodeText();\n        return;\n      }\n\n      if (transformMap[depth]) {\n        name = transformMap[depth];\n        delete transformMap[depth];\n      }\n\n      if (options.exclusiveFilter && options.exclusiveFilter(frame)) {\n        result = result.substr(0, frame.tagPosition);\n        return;\n      }\n\n      frame.updateParentNodeText();\n\n      if (options.selfClosing.indexOf(name) !== -1) {\n        // Already output />\n        return;\n      }\n\n      result += \"</\" + name + \">\";\n    }\n  }, options.parser);\n  parser.write(html);\n  parser.end();\n\n  return result;\n\n  function escapeHtml(s) {\n    if (typeof s !== 'string') {\n      s = s + '';\n    }\n    return s.replace(/&(?![a-zA-Z0-9#]{1,7};)/g, '&amp;') // Match ampersands not part of existing HTML entity\n    .replace(/</g, '&lt;').replace(/\\>/g, '&gt;').replace(/\\\"/g, '&quot;');\n  }\n\n  function naughtyHref(name, href) {\n    // Browsers ignore character codes of 32 (space) and below in a surprising\n    // number of situations. Start reading here:\n    // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet#Embedded_tab\n    href = href.replace(/[\\x00-\\x20]+/g, '');\n    // Clobber any comments in URLs, which the browser might\n    // interpret inside an XML data island, allowing\n    // a javascript: URL to be snuck through\n    href = href.replace(/<\\!\\-\\-.*?\\-\\-\\>/g, '');\n    // Case insensitive so we don't get faked out by JAVASCRIPT #1\n    var matches = href.match(/^([a-zA-Z]+)\\:/);\n    if (!matches) {\n      // Protocol-relative URL starting with any combination of '/' and '\\'\n      if (href.match(/^[\\/\\\\]{2}/)) {\n        return !options.allowProtocolRelative;\n      }\n\n      // No scheme\n      return false;\n    }\n    var scheme = matches[1].toLowerCase();\n\n    if (has(options.allowedSchemesByTag, name)) {\n      return options.allowedSchemesByTag[name].indexOf(scheme) === -1;\n    }\n\n    return !options.allowedSchemes || options.allowedSchemes.indexOf(scheme) === -1;\n  }\n\n  /**\n   * Filters user input css properties by whitelisted regex attributes.\n   *\n   * @param {object} abstractSyntaxTree  - Object representation of CSS attributes.\n   * @property {array[Declaration]} abstractSyntaxTree.nodes[0] - Each object cointains prop and value key, i.e { prop: 'color', value: 'red' }.\n   * @param {object} allowedStyles       - Keys are properties (i.e color), value is list of permitted regex rules (i.e /green/i).\n   * @return {object}                    - Abstract Syntax Tree with filtered style attributes.\n   */\n  function filterCss(abstractSyntaxTree, allowedStyles) {\n    if (!allowedStyles) {\n      return abstractSyntaxTree;\n    }\n\n    var filteredAST = cloneDeep(abstractSyntaxTree);\n    var astRules = abstractSyntaxTree.nodes[0];\n    var selectedRule;\n\n    // Merge global and tag-specific styles into new AST.\n    if (allowedStyles[astRules.selector] && allowedStyles['*']) {\n      selectedRule = mergeWith(cloneDeep(allowedStyles[astRules.selector]), allowedStyles['*'], function (objValue, srcValue) {\n        if (Array.isArray(objValue)) {\n          return objValue.concat(srcValue);\n        }\n      });\n    } else {\n      selectedRule = allowedStyles[astRules.selector] || allowedStyles['*'];\n    }\n\n    if (selectedRule) {\n      filteredAST.nodes[0].nodes = astRules.nodes.reduce(filterDeclarations(selectedRule), []);\n    }\n\n    return filteredAST;\n  }\n\n  /**\n   * Extracts the style attribues from an AbstractSyntaxTree and formats those\n   * values in the inline style attribute format.\n   *\n   * @param  {AbstractSyntaxTree} filteredAST\n   * @return {string}             - Example: \"color:yellow;text-align:center;font-family:helvetica;\"\n   */\n  function stringifyStyleAttributes(filteredAST) {\n    return filteredAST.nodes[0].nodes.reduce(function (extractedAttributes, attributeObject) {\n      extractedAttributes.push(attributeObject.prop + ':' + attributeObject.value + ';');\n      return extractedAttributes;\n    }, []).join('');\n  }\n\n  /**\n    * Filters the existing attributes for the given property. Discards any attributes\n    * which don't match the whitelist.\n    *\n    * @param  {object} selectedRule             - Example: { color: red, font-family: helvetica }\n    * @param  {array} allowedDeclarationsList   - List of declarations which pass whitelisting.\n    * @param  {object} attributeObject          - Object representing the current css property.\n    * @property {string} attributeObject.type   - Typically 'declaration'.\n    * @property {string} attributeObject.prop   - The CSS property, i.e 'color'.\n    * @property {string} attributeObject.value  - The corresponding value to the css property, i.e 'red'.\n    * @return {function}                        - When used in Array.reduce, will return an array of Declaration objects\n    */\n  function filterDeclarations(selectedRule) {\n    return function (allowedDeclarationsList, attributeObject) {\n      // If this property is whitelisted...\n      if (selectedRule.hasOwnProperty(attributeObject.prop)) {\n        var matchesRegex = selectedRule[attributeObject.prop].some(function (regularExpression) {\n          return regularExpression.test(attributeObject.value);\n        });\n\n        if (matchesRegex) {\n          allowedDeclarationsList.push(attributeObject);\n        }\n      }\n      return allowedDeclarationsList;\n    };\n  }\n\n  function filterClasses(classes, allowed) {\n    if (!allowed) {\n      // The class attribute is allowed without filtering on this tag\n      return classes;\n    }\n    classes = classes.split(/\\s+/);\n    return classes.filter(function (clss) {\n      return allowed.indexOf(clss) !== -1;\n    }).join(' ');\n  }\n}\n\n// Defaults are accessible to you so that you can use them as a starting point\n// programmatically if you wish\n\nvar htmlParserDefaults = {\n  decodeEntities: true\n};\nsanitizeHtml.defaults = {\n  allowedTags: ['h3', 'h4', 'h5', 'h6', 'blockquote', 'p', 'a', 'ul', 'ol', 'nl', 'li', 'b', 'i', 'strong', 'em', 'strike', 'code', 'hr', 'br', 'div', 'table', 'thead', 'caption', 'tbody', 'tr', 'th', 'td', 'pre', 'iframe'],\n  allowedAttributes: {\n    a: ['href', 'name', 'target'],\n    // We don't currently allow img itself by default, but this\n    // would make sense if we did. You could add srcset here,\n    // and if you do the URL is checked for safety\n    img: ['src']\n  },\n  // Lots of these won't come up by default because we don't allow them\n  selfClosing: ['img', 'br', 'hr', 'area', 'base', 'basefont', 'input', 'link', 'meta'],\n  // URL schemes we permit\n  allowedSchemes: ['http', 'https', 'ftp', 'mailto'],\n  allowedSchemesByTag: {},\n  allowedSchemesAppliedToAttributes: ['href', 'src', 'cite'],\n  allowProtocolRelative: true\n};\n\nsanitizeHtml.simpleTransform = function (newTagName, newAttribs, merge) {\n  merge = merge === undefined ? true : merge;\n  newAttribs = newAttribs || {};\n\n  return function (tagName, attribs) {\n    var attrib;\n    if (merge) {\n      for (attrib in newAttribs) {\n        attribs[attrib] = newAttribs[attrib];\n      }\n    } else {\n      attribs = newAttribs;\n    }\n\n    return {\n      tagName: newTagName,\n      attribs: attribs\n    };\n  };\n};","map":{"mappings":[{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/sanitize-html/dist/index.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}}],"sources":{"node_modules/sanitize-html/dist/index.js":"'use strict';\n\nvar htmlparser = require('htmlparser2');\nvar extend = require('xtend');\nvar quoteRegexp = require('lodash.escaperegexp');\nvar cloneDeep = require('lodash.clonedeep');\nvar mergeWith = require('lodash.mergewith');\nvar isString = require('lodash.isstring');\nvar isPlainObject = require('lodash.isplainobject');\nvar srcset = require('srcset');\nvar postcss = require('postcss');\nvar url = require('url');\n\nfunction each(obj, cb) {\n  if (obj) Object.keys(obj).forEach(function (key) {\n    cb(obj[key], key);\n  });\n}\n\n// Avoid false positives with .__proto__, .hasOwnProperty, etc.\nfunction has(obj, key) {\n  return {}.hasOwnProperty.call(obj, key);\n}\n\n// Returns those elements of `a` for which `cb(a)` returns truthy\nfunction filter(a, cb) {\n  var n = [];\n  each(a, function (v) {\n    if (cb(v)) {\n      n.push(v);\n    }\n  });\n  return n;\n}\n\nmodule.exports = sanitizeHtml;\n\n// A valid attribute name.\n// We use a tolerant definition based on the set of strings defined by\n// html.spec.whatwg.org/multipage/parsing.html#before-attribute-name-state\n// and html.spec.whatwg.org/multipage/parsing.html#attribute-name-state .\n// The characters accepted are ones which can be appended to the attribute\n// name buffer without triggering a parse error:\n//   * unexpected-equals-sign-before-attribute-name\n//   * unexpected-null-character\n//   * unexpected-character-in-attribute-name\n// We exclude the empty string because it's impossible to get to the after\n// attribute name state with an empty attribute name buffer.\nvar VALID_HTML_ATTRIBUTE_NAME = /^[^\\0\\t\\n\\f\\r /<=>]+$/;\n\n// Ignore the _recursing flag; it's there for recursive\n// invocation as a guard against this exploit:\n// https://github.com/fb55/htmlparser2/issues/105\n\nfunction sanitizeHtml(html, options, _recursing) {\n  var result = '';\n\n  function Frame(tag, attribs) {\n    var that = this;\n    this.tag = tag;\n    this.attribs = attribs || {};\n    this.tagPosition = result.length;\n    this.text = ''; // Node inner text\n\n    this.updateParentNodeText = function () {\n      if (stack.length) {\n        var parentFrame = stack[stack.length - 1];\n        parentFrame.text += that.text;\n      }\n    };\n  }\n\n  if (!options) {\n    options = sanitizeHtml.defaults;\n    options.parser = htmlParserDefaults;\n  } else {\n    options = extend(sanitizeHtml.defaults, options);\n    if (options.parser) {\n      options.parser = extend(htmlParserDefaults, options.parser);\n    } else {\n      options.parser = htmlParserDefaults;\n    }\n  }\n\n  // Tags that contain something other than HTML, or where discarding\n  // the text when the tag is disallowed makes sense for other reasons.\n  // If we are not allowing these tags, we should drop their content too.\n  // For other tags you would drop the tag but keep its content.\n  var nonTextTagsArray = options.nonTextTags || ['script', 'style', 'textarea'];\n  var allowedAttributesMap;\n  var allowedAttributesGlobMap;\n  if (options.allowedAttributes) {\n    allowedAttributesMap = {};\n    allowedAttributesGlobMap = {};\n    each(options.allowedAttributes, function (attributes, tag) {\n      allowedAttributesMap[tag] = [];\n      var globRegex = [];\n      attributes.forEach(function (obj) {\n        if (isString(obj) && obj.indexOf('*') >= 0) {\n          globRegex.push(quoteRegexp(obj).replace(/\\\\\\*/g, '.*'));\n        } else {\n          allowedAttributesMap[tag].push(obj);\n        }\n      });\n      allowedAttributesGlobMap[tag] = new RegExp('^(' + globRegex.join('|') + ')$');\n    });\n  }\n  var allowedClassesMap = {};\n  each(options.allowedClasses, function (classes, tag) {\n    // Implicitly allows the class attribute\n    if (allowedAttributesMap) {\n      if (!has(allowedAttributesMap, tag)) {\n        allowedAttributesMap[tag] = [];\n      }\n      allowedAttributesMap[tag].push('class');\n    }\n\n    allowedClassesMap[tag] = classes;\n  });\n\n  var transformTagsMap = {};\n  var transformTagsAll;\n  each(options.transformTags, function (transform, tag) {\n    var transFun;\n    if (typeof transform === 'function') {\n      transFun = transform;\n    } else if (typeof transform === \"string\") {\n      transFun = sanitizeHtml.simpleTransform(transform);\n    }\n    if (tag === '*') {\n      transformTagsAll = transFun;\n    } else {\n      transformTagsMap[tag] = transFun;\n    }\n  });\n\n  var depth = 0;\n  var stack = [];\n  var skipMap = {};\n  var transformMap = {};\n  var skipText = false;\n  var skipTextDepth = 0;\n\n  var parser = new htmlparser.Parser({\n    onopentag: function onopentag(name, attribs) {\n      if (skipText) {\n        skipTextDepth++;\n        return;\n      }\n      var frame = new Frame(name, attribs);\n      stack.push(frame);\n\n      var skip = false;\n      var hasText = frame.text ? true : false;\n      var transformedTag;\n      if (has(transformTagsMap, name)) {\n        transformedTag = transformTagsMap[name](name, attribs);\n\n        frame.attribs = attribs = transformedTag.attribs;\n\n        if (transformedTag.text !== undefined) {\n          frame.innerText = transformedTag.text;\n        }\n\n        if (name !== transformedTag.tagName) {\n          frame.name = name = transformedTag.tagName;\n          transformMap[depth] = transformedTag.tagName;\n        }\n      }\n      if (transformTagsAll) {\n        transformedTag = transformTagsAll(name, attribs);\n\n        frame.attribs = attribs = transformedTag.attribs;\n        if (name !== transformedTag.tagName) {\n          frame.name = name = transformedTag.tagName;\n          transformMap[depth] = transformedTag.tagName;\n        }\n      }\n\n      if (options.allowedTags && options.allowedTags.indexOf(name) === -1) {\n        skip = true;\n        if (nonTextTagsArray.indexOf(name) !== -1) {\n          skipText = true;\n          skipTextDepth = 1;\n        }\n        skipMap[depth] = true;\n      }\n      depth++;\n      if (skip) {\n        // We want the contents but not this tag\n        return;\n      }\n      result += '<' + name;\n      if (!allowedAttributesMap || has(allowedAttributesMap, name) || allowedAttributesMap['*']) {\n        each(attribs, function (value, a) {\n          if (!VALID_HTML_ATTRIBUTE_NAME.test(a)) {\n            // This prevents part of an attribute name in the output from being\n            // interpreted as the end of an attribute, or end of a tag.\n            delete frame.attribs[a];\n            return;\n          }\n          var parsed;\n          // check allowedAttributesMap for the element and attribute and modify the value\n          // as necessary if there are specific values defined.\n          var passedAllowedAttributesMapCheck = false;\n          if (!allowedAttributesMap || has(allowedAttributesMap, name) && allowedAttributesMap[name].indexOf(a) !== -1 || allowedAttributesMap['*'] && allowedAttributesMap['*'].indexOf(a) !== -1 || has(allowedAttributesGlobMap, name) && allowedAttributesGlobMap[name].test(a) || allowedAttributesGlobMap['*'] && allowedAttributesGlobMap['*'].test(a)) {\n            passedAllowedAttributesMapCheck = true;\n          } else if (allowedAttributesMap && allowedAttributesMap[name]) {\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n              for (var _iterator = allowedAttributesMap[name][Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var o = _step.value;\n\n                if (isPlainObject(o) && o.name && o.name === a) {\n                  passedAllowedAttributesMapCheck = true;\n                  var newValue = '';\n                  if (o.multiple === true) {\n                    // verify the values that are allowed\n                    var splitStrArray = value.split(' ');\n                    var _iteratorNormalCompletion2 = true;\n                    var _didIteratorError2 = false;\n                    var _iteratorError2 = undefined;\n\n                    try {\n                      for (var _iterator2 = splitStrArray[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                        var s = _step2.value;\n\n                        if (o.values.indexOf(s) !== -1) {\n                          if (newValue === '') {\n                            newValue = s;\n                          } else {\n                            newValue += ' ' + s;\n                          }\n                        }\n                      }\n                    } catch (err) {\n                      _didIteratorError2 = true;\n                      _iteratorError2 = err;\n                    } finally {\n                      try {\n                        if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                          _iterator2.return();\n                        }\n                      } finally {\n                        if (_didIteratorError2) {\n                          throw _iteratorError2;\n                        }\n                      }\n                    }\n                  } else if (o.values.indexOf(value) >= 0) {\n                    // verified an allowed value matches the entire attribute value\n                    newValue = value;\n                  }\n                  value = newValue;\n                }\n              }\n            } catch (err) {\n              _didIteratorError = true;\n              _iteratorError = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                  _iterator.return();\n                }\n              } finally {\n                if (_didIteratorError) {\n                  throw _iteratorError;\n                }\n              }\n            }\n          }\n          if (passedAllowedAttributesMapCheck) {\n            if (options.allowedSchemesAppliedToAttributes.indexOf(a) !== -1) {\n              if (naughtyHref(name, value)) {\n                delete frame.attribs[a];\n                return;\n              }\n            }\n            if (name === 'iframe' && a === 'src') {\n              try {\n                // naughtyHref is in charge of whether protocol relative URLs\n                // are cool. We should just accept them\n                parsed = url.parse(value, false, true);\n                if (options.allowedIframeHostnames) {\n                  var whitelistedHostnames = options.allowedIframeHostnames.find(function (hostname) {\n                    return hostname === parsed.hostname;\n                  });\n                  if (!whitelistedHostnames) {\n                    delete frame.attribs[a];\n                    return;\n                  }\n                }\n              } catch (e) {\n                // Unparseable iframe src\n                delete frame.attribs[a];\n                return;\n              }\n            }\n            if (a === 'srcset') {\n              try {\n                parsed = srcset.parse(value);\n                each(parsed, function (value) {\n                  if (naughtyHref('srcset', value.url)) {\n                    value.evil = true;\n                  }\n                });\n                parsed = filter(parsed, function (v) {\n                  return !v.evil;\n                });\n                if (!parsed.length) {\n                  delete frame.attribs[a];\n                  return;\n                } else {\n                  value = srcset.stringify(filter(parsed, function (v) {\n                    return !v.evil;\n                  }));\n                  frame.attribs[a] = value;\n                }\n              } catch (e) {\n                // Unparseable srcset\n                delete frame.attribs[a];\n                return;\n              }\n            }\n            if (a === 'class') {\n              value = filterClasses(value, allowedClassesMap[name]);\n              if (!value.length) {\n                delete frame.attribs[a];\n                return;\n              }\n            }\n            if (a === 'style') {\n              try {\n                var abstractSyntaxTree = postcss.parse(name + \" {\" + value + \"}\");\n                var filteredAST = filterCss(abstractSyntaxTree, options.allowedStyles);\n\n                value = stringifyStyleAttributes(filteredAST);\n\n                if (value.length === 0) {\n                  delete frame.attribs[a];\n                  return;\n                }\n              } catch (e) {\n                delete frame.attribs[a];\n                return;\n              }\n            }\n            result += ' ' + a;\n            if (value.length) {\n              result += '=\"' + escapeHtml(value) + '\"';\n            }\n          } else {\n            delete frame.attribs[a];\n          }\n        });\n      }\n      if (options.selfClosing.indexOf(name) !== -1) {\n        result += \" />\";\n      } else {\n        result += \">\";\n        if (frame.innerText && !hasText && !options.textFilter) {\n          result += frame.innerText;\n        }\n      }\n    },\n    ontext: function ontext(text) {\n      if (skipText) {\n        return;\n      }\n      var lastFrame = stack[stack.length - 1];\n      var tag;\n\n      if (lastFrame) {\n        tag = lastFrame.tag;\n        // If inner text was set by transform function then let's use it\n        text = lastFrame.innerText !== undefined ? lastFrame.innerText : text;\n      }\n\n      if (tag === 'script' || tag === 'style') {\n        // htmlparser2 gives us these as-is. Escaping them ruins the content. Allowing\n        // script tags is, by definition, game over for XSS protection, so if that's\n        // your concern, don't allow them. The same is essentially true for style tags\n        // which have their own collection of XSS vectors.\n        result += text;\n      } else {\n        var escaped = escapeHtml(text);\n        if (options.textFilter) {\n          result += options.textFilter(escaped);\n        } else {\n          result += escaped;\n        }\n      }\n      if (stack.length) {\n        var frame = stack[stack.length - 1];\n        frame.text += text;\n      }\n    },\n    onclosetag: function onclosetag(name) {\n\n      if (skipText) {\n        skipTextDepth--;\n        if (!skipTextDepth) {\n          skipText = false;\n        } else {\n          return;\n        }\n      }\n\n      var frame = stack.pop();\n      if (!frame) {\n        // Do not crash on bad markup\n        return;\n      }\n      skipText = false;\n      depth--;\n      if (skipMap[depth]) {\n        delete skipMap[depth];\n        frame.updateParentNodeText();\n        return;\n      }\n\n      if (transformMap[depth]) {\n        name = transformMap[depth];\n        delete transformMap[depth];\n      }\n\n      if (options.exclusiveFilter && options.exclusiveFilter(frame)) {\n        result = result.substr(0, frame.tagPosition);\n        return;\n      }\n\n      frame.updateParentNodeText();\n\n      if (options.selfClosing.indexOf(name) !== -1) {\n        // Already output />\n        return;\n      }\n\n      result += \"</\" + name + \">\";\n    }\n  }, options.parser);\n  parser.write(html);\n  parser.end();\n\n  return result;\n\n  function escapeHtml(s) {\n    if (typeof s !== 'string') {\n      s = s + '';\n    }\n    return s.replace(/&(?![a-zA-Z0-9#]{1,7};)/g, '&amp;') // Match ampersands not part of existing HTML entity\n    .replace(/</g, '&lt;').replace(/\\>/g, '&gt;').replace(/\\\"/g, '&quot;');\n  }\n\n  function naughtyHref(name, href) {\n    // Browsers ignore character codes of 32 (space) and below in a surprising\n    // number of situations. Start reading here:\n    // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet#Embedded_tab\n    href = href.replace(/[\\x00-\\x20]+/g, '');\n    // Clobber any comments in URLs, which the browser might\n    // interpret inside an XML data island, allowing\n    // a javascript: URL to be snuck through\n    href = href.replace(/<\\!\\-\\-.*?\\-\\-\\>/g, '');\n    // Case insensitive so we don't get faked out by JAVASCRIPT #1\n    var matches = href.match(/^([a-zA-Z]+)\\:/);\n    if (!matches) {\n      // Protocol-relative URL starting with any combination of '/' and '\\'\n      if (href.match(/^[\\/\\\\]{2}/)) {\n        return !options.allowProtocolRelative;\n      }\n\n      // No scheme\n      return false;\n    }\n    var scheme = matches[1].toLowerCase();\n\n    if (has(options.allowedSchemesByTag, name)) {\n      return options.allowedSchemesByTag[name].indexOf(scheme) === -1;\n    }\n\n    return !options.allowedSchemes || options.allowedSchemes.indexOf(scheme) === -1;\n  }\n\n  /**\n   * Filters user input css properties by whitelisted regex attributes.\n   *\n   * @param {object} abstractSyntaxTree  - Object representation of CSS attributes.\n   * @property {array[Declaration]} abstractSyntaxTree.nodes[0] - Each object cointains prop and value key, i.e { prop: 'color', value: 'red' }.\n   * @param {object} allowedStyles       - Keys are properties (i.e color), value is list of permitted regex rules (i.e /green/i).\n   * @return {object}                    - Abstract Syntax Tree with filtered style attributes.\n   */\n  function filterCss(abstractSyntaxTree, allowedStyles) {\n    if (!allowedStyles) {\n      return abstractSyntaxTree;\n    }\n\n    var filteredAST = cloneDeep(abstractSyntaxTree);\n    var astRules = abstractSyntaxTree.nodes[0];\n    var selectedRule;\n\n    // Merge global and tag-specific styles into new AST.\n    if (allowedStyles[astRules.selector] && allowedStyles['*']) {\n      selectedRule = mergeWith(cloneDeep(allowedStyles[astRules.selector]), allowedStyles['*'], function (objValue, srcValue) {\n        if (Array.isArray(objValue)) {\n          return objValue.concat(srcValue);\n        }\n      });\n    } else {\n      selectedRule = allowedStyles[astRules.selector] || allowedStyles['*'];\n    }\n\n    if (selectedRule) {\n      filteredAST.nodes[0].nodes = astRules.nodes.reduce(filterDeclarations(selectedRule), []);\n    }\n\n    return filteredAST;\n  }\n\n  /**\n   * Extracts the style attribues from an AbstractSyntaxTree and formats those\n   * values in the inline style attribute format.\n   *\n   * @param  {AbstractSyntaxTree} filteredAST\n   * @return {string}             - Example: \"color:yellow;text-align:center;font-family:helvetica;\"\n   */\n  function stringifyStyleAttributes(filteredAST) {\n    return filteredAST.nodes[0].nodes.reduce(function (extractedAttributes, attributeObject) {\n      extractedAttributes.push(attributeObject.prop + ':' + attributeObject.value + ';');\n      return extractedAttributes;\n    }, []).join('');\n  }\n\n  /**\n    * Filters the existing attributes for the given property. Discards any attributes\n    * which don't match the whitelist.\n    *\n    * @param  {object} selectedRule             - Example: { color: red, font-family: helvetica }\n    * @param  {array} allowedDeclarationsList   - List of declarations which pass whitelisting.\n    * @param  {object} attributeObject          - Object representing the current css property.\n    * @property {string} attributeObject.type   - Typically 'declaration'.\n    * @property {string} attributeObject.prop   - The CSS property, i.e 'color'.\n    * @property {string} attributeObject.value  - The corresponding value to the css property, i.e 'red'.\n    * @return {function}                        - When used in Array.reduce, will return an array of Declaration objects\n    */\n  function filterDeclarations(selectedRule) {\n    return function (allowedDeclarationsList, attributeObject) {\n      // If this property is whitelisted...\n      if (selectedRule.hasOwnProperty(attributeObject.prop)) {\n        var matchesRegex = selectedRule[attributeObject.prop].some(function (regularExpression) {\n          return regularExpression.test(attributeObject.value);\n        });\n\n        if (matchesRegex) {\n          allowedDeclarationsList.push(attributeObject);\n        }\n      }\n      return allowedDeclarationsList;\n    };\n  }\n\n  function filterClasses(classes, allowed) {\n    if (!allowed) {\n      // The class attribute is allowed without filtering on this tag\n      return classes;\n    }\n    classes = classes.split(/\\s+/);\n    return classes.filter(function (clss) {\n      return allowed.indexOf(clss) !== -1;\n    }).join(' ');\n  }\n}\n\n// Defaults are accessible to you so that you can use them as a starting point\n// programmatically if you wish\n\nvar htmlParserDefaults = {\n  decodeEntities: true\n};\nsanitizeHtml.defaults = {\n  allowedTags: ['h3', 'h4', 'h5', 'h6', 'blockquote', 'p', 'a', 'ul', 'ol', 'nl', 'li', 'b', 'i', 'strong', 'em', 'strike', 'code', 'hr', 'br', 'div', 'table', 'thead', 'caption', 'tbody', 'tr', 'th', 'td', 'pre', 'iframe'],\n  allowedAttributes: {\n    a: ['href', 'name', 'target'],\n    // We don't currently allow img itself by default, but this\n    // would make sense if we did. You could add srcset here,\n    // and if you do the URL is checked for safety\n    img: ['src']\n  },\n  // Lots of these won't come up by default because we don't allow them\n  selfClosing: ['img', 'br', 'hr', 'area', 'base', 'basefont', 'input', 'link', 'meta'],\n  // URL schemes we permit\n  allowedSchemes: ['http', 'https', 'ftp', 'mailto'],\n  allowedSchemesByTag: {},\n  allowedSchemesAppliedToAttributes: ['href', 'src', 'cite'],\n  allowProtocolRelative: true\n};\n\nsanitizeHtml.simpleTransform = function (newTagName, newAttribs, merge) {\n  merge = merge === undefined ? true : merge;\n  newAttribs = newAttribs || {};\n\n  return function (tagName, attribs) {\n    var attrib;\n    if (merge) {\n      for (attrib in newAttribs) {\n        attribs[attrib] = newAttribs[attrib];\n      }\n    } else {\n      attribs = newAttribs;\n    }\n\n    return {\n      tagName: newTagName,\n      attribs: attribs\n    };\n  };\n};"},"lineCount":619}},"hash":"aef479431c5dff013fc645da7ef391a8","cacheData":{"env":{}}}