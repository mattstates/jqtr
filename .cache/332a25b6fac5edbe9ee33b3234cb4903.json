{"id":"node_modules/date-fns/min/index.js","dependencies":[{"name":"/Users/mattstates/Documents/JQTR/node_modules/date-fns/min/package.json","includedInParent":true,"mtime":1544450746000},{"name":"/Users/mattstates/Documents/JQTR/package.json","includedInParent":true,"mtime":1559866723838},{"name":"/Users/mattstates/Documents/JQTR/.babelrc","includedInParent":true,"mtime":1557269879909},{"name":"../parse/index.js","loc":{"line":1,"column":20},"parent":"/Users/mattstates/Documents/JQTR/node_modules/date-fns/min/index.js","resolved":"/Users/mattstates/Documents/JQTR/node_modules/date-fns/parse/index.js"}],"generated":{"js":"var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Return the earliest of the given dates.\n *\n * @description\n * Return the earliest of the given dates.\n *\n * @param {...(Date|String|Number)} dates - the dates to compare\n * @returns {Date} the earliest of the dates\n *\n * @example\n * // Which of these dates is the earliest?\n * var result = min(\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * )\n * //=> Wed Feb 11 1987 00:00:00\n */\nfunction min () {\n  var dirtyDates = Array.prototype.slice.call(arguments)\n  var dates = dirtyDates.map(function (dirtyDate) {\n    return parse(dirtyDate)\n  })\n  var earliestTimestamp = Math.min.apply(null, dates)\n  return new Date(earliestTimestamp)\n}\n\nmodule.exports = min\n","map":{"mappings":[{"source":"node_modules/date-fns/min/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/date-fns/min/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/date-fns/min/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/date-fns/min/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/date-fns/min/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/date-fns/min/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/date-fns/min/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/date-fns/min/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/date-fns/min/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/date-fns/min/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/date-fns/min/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/date-fns/min/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/date-fns/min/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/date-fns/min/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/date-fns/min/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/date-fns/min/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/date-fns/min/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/date-fns/min/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/date-fns/min/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/date-fns/min/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/date-fns/min/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/date-fns/min/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/date-fns/min/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/date-fns/min/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/date-fns/min/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/date-fns/min/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/date-fns/min/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/date-fns/min/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/date-fns/min/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/date-fns/min/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/date-fns/min/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/date-fns/min/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/date-fns/min/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}}],"sources":{"node_modules/date-fns/min/index.js":"var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Return the earliest of the given dates.\n *\n * @description\n * Return the earliest of the given dates.\n *\n * @param {...(Date|String|Number)} dates - the dates to compare\n * @returns {Date} the earliest of the dates\n *\n * @example\n * // Which of these dates is the earliest?\n * var result = min(\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * )\n * //=> Wed Feb 11 1987 00:00:00\n */\nfunction min () {\n  var dirtyDates = Array.prototype.slice.call(arguments)\n  var dates = dirtyDates.map(function (dirtyDate) {\n    return parse(dirtyDate)\n  })\n  var earliestTimestamp = Math.min.apply(null, dates)\n  return new Date(earliestTimestamp)\n}\n\nmodule.exports = min\n"},"lineCount":33}},"hash":"22ccd0e091a3017629764ffed46ef127","cacheData":{"env":{}}}